[package]
name = "skin-renderer"
version.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
license.workspace = true
repository.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
ears-rs = { git = "https://github.com/NickAcPT/ears-rs" }
console_error_panic_hook = "*"
wasm-bindgen = { workspace = true }
nmsr-rendering = { path = "D:\\IDEs\\CLionProjects\\nmsr-rs\\nmsr-3d-renderer\\nmsr-rendering", default-features = false }
nmsr-rasterizer-test = { path = "D:\\IDEs\\CLionProjects\\nmsr-rasterizer-test", optional = true }
nmsr-player-parts = { path = "D:\\IDEs\\CLionProjects\\nmsr-rs\\nmsr-3d-renderer\\nmsr-player-parts" }
# web-sys has to be locked to 0.3.64 because otherwise, wgpu breaks
web-sys = { version = "=0.3.64", features = ["HtmlCanvasElement"] }
# We're being spicy here by asking it to be send and sync..
wgpu = { version = "^0.18", features = [
    "fragile-send-sync-non-atomic-wasm",
], optional = true }
winit = "0.29"
js-utils = { workspace = true }
wasm-bindgen-futures = "0.4.38"
send_wrapper = "0.6.0"
image = { version = "0", default-features = false, features = ["png"] }
glam = "0.24"

[features]
default = ["ears", "nmsr-rendering/ears", "nmsr-rasterizer-test?/ears"]
webgl = ["dep:wgpu", "wgpu/webgl", "nmsr-rendering/pipeline"]
webgpu = ["dep:wgpu", "nmsr-rendering/pipeline"]
software-rendering = [
    "dep:nmsr-rasterizer-test",
    "web-sys/CanvasRenderingContext2d",
    "web-sys/ImageData",
]
ears = ["nmsr-rendering/ears", "nmsr-player-parts/ears"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-g", "--roundtrip"]
